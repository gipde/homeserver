// vim: set filetype=cpp:

#include "Ds18x20libTest.h"

extern "C" {
#include "../../main/ds18x20lib.h"
#include "../../main/delay.h"
}

CASE(Ds18x20LibTest, TestBase)

static one_wire_T ow;

SETUP()
{
    ow = { M_PORTA, M_PINA, M_DDRA, 4};
    initMock();
}

TEST(reset_test)
{
    debug("Reset Test");

    char rdat[] = {0x02};
    replay_T replay = { rdat, 1 };
    set_replay_data(&replay);

    reset(&ow);

    char r[] = {0x15, 0x4, 0x5a, 0x2d, 0x2f, 0x3f, 0x40, 0xd6, 0x0, 0xbd,
                0xc6, 0x7b, 0x35, 0x3e, 0xa8, 0xa2, 0xd4, 0xf3, 0xc3, 0xc1
               };
    return cmpMock(r);
}

TEST(search_test)
{
    /*
     * es sollen zwei sensoren gefunden werden
     */

    char roms[2][8] = {
        { 0x28, 0x61, 0xB6, 0xCE, 0x01, 0x00, 0x00, 0xBE },
        { 0x28, 0xD7, 0xBD, 0xCE, 0x01, 0x00, 0x00, 0x7B }
    };

    char rdat[] = {
        0x0A, 0x99, 0xA6, 0x5A, 0x5A, 0x96, 0x59, 0x69,
        0xA5, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x5A, 0x95,
        0xA9, 0x66, 0x5A, 0x99, 0x95, 0x55, 0x66, 0xA5,
        0x95, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x5A, 0x56,
        0x09
    };

    replay_T mreplay = { rdat, 33 };
    set_replay_data(&mreplay);

    sensorT sensor;
    uint8_t romptr = 0;

    while (search_slaves(&ow, &sensor)) {
        debugn("ROM: ");

        for (int i = 0; i < 8; i++) {
            debugc("%02X ", sensor.rom[i]);

            if (*((char*)roms + romptr++) != sensor.rom[i])
                return false;
        }

        debugnl();
    }

    char r[] = {0xab, 0x49, 0xc2, 0x3c, 0x97, 0xea, 0x68, 0x71, 0xf4, 0x15,
                0x1, 0x4d, 0xc5, 0x31, 0x49, 0xbf, 0xa6, 0x72, 0x67, 0x9b
               };
    return cmpMock(r);
}

